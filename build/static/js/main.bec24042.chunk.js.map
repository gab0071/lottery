{"version":3,"sources":["components/Navbar.js","img/01.jpg","img/02.png","img/03.png","components/Carousel.js","components/Tokens.js","components/Loteria.js","components/Ganador.js","components/Footer.js","components/App.js","reportWebVitals.js","index.js"],"names":["Navigation","account","Navbar","expand","bg","variant","Container","Brand","href","Toggle","Collapse","id","Nav","className","Link","as","to","target","rel","Button","slice","Component","App","props","_balanceTokens","a","console","log","state","contract","methods","balanceTokens","call","_balance","Swal","fire","icon","title","width","padding","text","backdrop","setState","errorMessage","loading","_balanceTokensSC","balanceTokensSC","_balanceEthersSC","balanceEthersSC","_compraTokens","_numTokens","web3","window","ethers","utils","toWei","compraTokens","send","from","value","_devolverTokens","devolverTokens","this","loadWeb3","loadBlockchainData","ethereum","Web3","request","method","accounts","currentProvider","alert","eth","getAccounts","net","getId","networkId","networkData","smart_contract","networks","abi","address","Contract","role","Row","Col","onSubmit","event","preventDefault","type","cantidad","placeholder","ref","input","_numTokensDevolver","Loteria","_compraBoletos","_numBoletos","compraBoleto","_precioBoleto","precioBoleto","_precio","_tusBoletos","tusBoletos","_boletos","Ganador","_generarGanador","generarGanador","_ganador","ganador","winner","MyFooter","style","backgroundColor","path","element","Tokens","Footer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.bec24042.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav, Button, Container } from 'react-bootstrap';\n\nconst Navigation = ({ account }) => {\n    return (\n        <Navbar expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Container>\n                <Navbar.Brand href=\"#\">\n                    &nbsp; CatellaTech Lottery\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"navbar navbar-dark bg-primary\" />\n                <Navbar.Collapse id=\"navbar navbar-dark bg-primary\">\n                    <Nav className=\"me-auto\">\n                        <Nav.Link as={Link} to=\"/\">Tokens</Nav.Link>\n                        <Nav.Link as={Link} to=\"/loteria\">Loteria</Nav.Link>\n                        <Nav.Link as={Link} to=\"/ganador\">Ganador</Nav.Link>\n                    </Nav>\n                    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                                &nbsp; &nbsp;\n                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                                &nbsp; &nbsp;\n                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                                &nbsp; &nbsp;\n                                &nbsp; &nbsp;\n                    <Nav>\n                        <Nav.Link\n                            href={`https://etherscan.io/address/${account}`}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"button nav-button btn-sm mx-4\">\n                            <Button variant=\"outline-light\">\n                                {account.slice(0, 10) + '...' + account.slice(32, 42)}\n                            </Button>\n                        </Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    )\n\n}\n\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/01.0e0537c7.jpg\";","export default __webpack_public_path__ + \"static/media/02.5208baa9.png\";","export default __webpack_public_path__ + \"static/media/03.9d08f483.png\";","import React, { Component } from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport img1 from '../img/01.jpg';\nimport img2 from '../img/02.png';\nimport img3 from '../img/03.png';\n\n\nclass MyCarousel extends Component {\n    render() {\n        return (\n            <Carousel>\n                <Carousel.Item>\n                    <a href='#'>\n                        <img\n                            className=\"d-block w-100 style\"\n                            src={img1}\n                            alt=''\n                        />\n                    </a>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <a href='#'>\n                        <img\n                            className=\"d-block w-100\"\n                            src={img2}\n                            alt=''\n                        />\n                    </a>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <a href='#'>\n                        <img\n                            className=\"d-block w-100\"\n                            src={img3}\n                            alt=''\n                        />\n                    </a>\n                </Carousel.Item>\n            </Carousel>\n\n        );\n    }\n}\n\nexport default MyCarousel;","import React, {Component} from 'react';\nimport smart_contract from '../abis/loteria.json';\nimport Web3 from 'web3';\n\nimport Navigation from './Navbar';\nimport MyCarousel from './Carousel';\n\n// Importamos filas y columnas de react-boostrap\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { Container } from 'react-bootstrap';\n// Importacion de sweetalert2\nimport Swal from 'sweetalert2';\n\nclass App extends Component {\n    async componentDidMount() {\n        // 1. Carga de Web3\n        await this.loadWeb3();\n        // 2. Carga de datos de la Blockchain\n        await this.loadBlockchainData();\n    }\n\n    // 1. Carga de Web3\n    async loadWeb3() {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum);\n            const accounts = await window.ethereum.request({\n                method: 'eth_requestAccounts',\n            });\n            console.log('Accounts: ', accounts);\n        } else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider);\n        } else {\n            window.alert('¡Deberías considerar usar Metamask!');\n        }\n    }\n\n    // 2. Carga de datos de la Blockchain\n    async loadBlockchainData() {\n        const web3 = window.web3;\n        const accounts = await web3.eth.getAccounts();\n        this.setState({account: accounts[0]});\n        // Ganache -> 5777, Rinkeby -> 4, BSC -> 97\n        const networkId = await web3.eth.net.getId();\n        console.log('networkid:', networkId);\n        const networkData = smart_contract.networks[networkId];\n        console.log('NetworkData:', networkData);\n\n        if (networkData) {\n            const abi = smart_contract.abi;\n            console.log('abi', abi);\n            const address = networkData.address;\n            console.log('address:', address);\n            const contract = new web3.eth.Contract(abi, address);\n            this.setState({contract});\n        } else {\n            window.alert('¡El Smart Contract no se ha desplegado en la red!');\n        }\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            account: '0x0',\n            loading: true,\n            errorMessage: '',\n            contract: null,\n        };\n    }\n\n    // Para ver que balance tenemos\n    _balanceTokens = async () => {\n        try {\n            console.log('Balance de tokens en ejecucion...');\n            const _balance = await this.state.contract.methods\n                .balanceTokens(this.state.account)\n                .call();\n            Swal.fire({\n                icon: 'info',\n                title: 'Balance de tokens del usuario:',\n                width: 800,\n                padding: '3em',\n                text: `${_balance} tokens`,\n                backdrop: `\n            rgba(15, 238, 168, 0.2)\n            left top\n            no-repeat\n          `,\n            });\n        } catch (err) {\n            this.setState({errorMessage: err});\n        } finally {\n            this.setState({loading: false});\n        }\n    };\n\n    _balanceTokensSC = async () => {\n        try {\n            console.log('Balance de tokens del Smart Contract en ejecucion...');\n            const _balanceTokensSC = await this.state.contract.methods\n                .balanceTokensSC()\n                .call();\n            Swal.fire({\n                icon: 'info',\n                title: 'Balance de tokens del Smart Contract:',\n                width: 800,\n                padding: '3em',\n                text: `${_balanceTokensSC} tokens`,\n                backdrop: `\n            rgba(15, 238, 168, 0.2)\n            left top\n            no-repeat\n          `,\n            });\n        } catch (err) {\n            this.setState({errorMessage: err});\n        } finally {\n            this.setState({loading: false});\n        }\n    };\n\n    _balanceEthersSC = async () => {\n        try {\n            console.log('Balance de ethers del Smart Contract en ejecucion...');\n            const _balanceEthersSC = await this.state.contract.methods\n                .balanceEthersSC()\n                .call();\n            Swal.fire({\n                icon: 'info',\n                title: 'Balance de ethers del Smart Contract:',\n                width: 800,\n                padding: '3em',\n                text: `${_balanceEthersSC} ethers`,\n                backdrop: `\n            rgba(15, 238, 168, 0.2)\n            left top\n            no-repeat\n          `,\n            });\n        } catch (err) {\n            this.setState({errorMessage: err});\n        } finally {\n            this.setState({loading: false});\n        }\n    };\n\n    _compraTokens = async (_numTokens) => {\n        try {\n            console.log('Compra de tokens en ejecucion...');\n            const web3 = window.web3;\n            const ethers = web3.utils.toWei(_numTokens, 'ether');\n            await this.state.contract.methods.compraTokens(_numTokens).send({\n                from: this.state.account,\n                value: ethers,\n            });\n            Swal.fire({\n                icon: 'success',\n                title: '¡Compra de tokens realizada!',\n                width: 800,\n                padding: '3em',\n                text: `Has comprado ${_numTokens} token/s por un valor de ${\n                    ethers / 10 ** 18\n                } ether/s`,\n                backdrop: `\n            rgba(15, 238, 168, 0.2)\n            left top\n            no-repeat\n          `,\n            });\n        } catch (err) {\n            this.setState({errorMessage: err});\n        } finally {\n            this.setState({loading: false});\n        }\n    };\n\n    _devolverTokens = async (_numTokens) => {\n        try {\n            console.log('Devolucion de tokens ERC-20 en ejecucion...');\n            await this.state.contract.methods.devolverTokens(_numTokens).send({\n                from: this.state.account,\n            });\n            Swal.fire({\n                icon: 'warning',\n                title: '¡Devolución de tokens ERC-20!',\n                width: 800,\n                padding: '3em',\n                text: `Has devuelto ${_numTokens} token/s`,\n                backdrop: `\n              rgba(15, 238, 168, 0.2)\n              left top\n              no-repeat\n            `,\n            });\n        } catch (err) {\n            this.setState({errorMessage: err});\n        } finally {\n            this.setState({loading: false});\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <Navigation account={this.state.account} />\n                <div className=\"container-fluid mt-5\">\n                    <div className=\"row\">\n                        <main\n                            role=\"main\"\n                            className=\"col-lg-12 d-flex text-center\"\n                        >\n                            <div className=\"content mr-auto ml-auto\">\n                                <h1>Gestión de los Tokens ERC-20</h1>\n                                &nbsp;\n                                <Container>\n                                    <Row>\n                                        <Col>\n                                            <h3>Users Tokens</h3>\n                                            <form\n                                                onSubmit={(event) => {\n                                                    event.preventDefault();\n                                                    this._balanceTokens();\n                                                }}\n                                            >\n                                                <input\n                                                    type=\"submit\"\n                                                    className=\"bbtn btn-block btn-success btn-sm\"\n                                                    value=\"BALANCE DE TOKENS\"\n                                                />\n                                            </form>\n                                        </Col>\n                                        <Col>\n                                            <h3> Tokens SC </h3>\n                                            <form\n                                                onSubmit={(event) => {\n                                                    event.preventDefault();\n                                                    this._balanceTokensSC();\n                                                }}\n                                            >\n                                                <input\n                                                    type=\"submit\"\n                                                    className=\"bbtn btn-block btn-info btn-sm\"\n                                                    value=\"BALANCE DE TOKENS (SC)\"\n                                                />\n                                            </form>\n                                        </Col>\n                                        <Col>\n                                            <h3> Ethers SC </h3>\n                                            <form\n                                                onSubmit={(event) => {\n                                                    event.preventDefault();\n                                                    this._balanceEthersSC();\n                                                }}\n                                            >\n                                                <input\n                                                    type=\"submit\"\n                                                    className=\"bbtn btn-block btn-danger btn-sm\"\n                                                    value=\"BALANCE DE ETHERS (SC)\"\n                                                />\n                                            </form>\n                                        </Col>\n                                    </Row>\n                                </Container>\n                                &nbsp;\n                                <h3>Compra de Tokens ERC-20</h3>\n                                <form\n                                    onSubmit={(event) => {\n                                        event.preventDefault();\n                                        const cantidad = this._numTokens.value;\n                                        this._compraTokens(cantidad);\n                                    }}\n                                >\n                                    <input\n                                        type=\"number\"\n                                        className=\"form-control mb-1\"\n                                        placeholder=\"Cantidad de tokens a comprar\"\n                                        ref={(input) =>\n                                            (this._numTokens = input)\n                                        }\n                                    />\n\n                                    <input\n                                        type=\"submit\"\n                                        className=\"bbtn btn-block btn-primary btn-sm\"\n                                        value=\"COMPRAR TOKENS\"\n                                    />\n                                </form>\n                                &nbsp;\n                                <h3> Devolución de tokens ERC-20 </h3>\n                                <form\n                                    onSubmit={(event) => {\n                                        event.preventDefault();\n                                        const cantidad =\n                                            this._numTokensDevolver.value;\n                                        this._devolverTokens(cantidad);\n                                    }}\n                                >\n                                    <input\n                                        type=\"number\"\n                                        className=\"form-control mb-1\"\n                                        placeholder=\"Cantidad de tokens a devolver\"\n                                        ref={(input) =>\n                                            (this._numTokensDevolver = input)\n                                        }\n                                    />\n\n                                    <input\n                                        type=\"submit\"\n                                        className=\"bbtn btn-block btn-warning btn-sm\"\n                                        value=\"DEVOLVER TOKENS\"\n                                    />\n                                </form>\n                            </div>\n                        </main>\n                        &nbsp; &nbsp; &nbsp; &nbsp;\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport smart_contract from '../abis/loteria.json';\r\nimport Web3 from 'web3';\r\nimport Swal from 'sweetalert2';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport Navigation from './Navbar';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nclass Loteria extends Component {\r\n\r\n    async componentDidMount() {\r\n        // 1. Carga de Web3\r\n        await this.loadWeb3()\r\n        // 2. Carga de datos de la Blockchain\r\n        await this.loadBlockchainData()\r\n    }\r\n\r\n    // 1. Carga de Web3\r\n    async loadWeb3() {\r\n        if (window.ethereum) {\r\n            window.web3 = new Web3(window.ethereum)\r\n            const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n            console.log('Accounts: ', accounts)\r\n        }\r\n        else if (window.web3) {\r\n            window.web3 = new Web3(window.web3.currentProvider)\r\n        }\r\n        else {\r\n            window.alert('¡Deberías considerar usar Metamask!')\r\n        }\r\n    }\r\n\r\n    // 2. Carga de datos de la Blockchain\r\n    async loadBlockchainData() {\r\n        const web3 = window.web3\r\n        const accounts = await web3.eth.getAccounts()\r\n        this.setState({ account: accounts[0] })\r\n        // Ganache -> 5777, Rinkeby -> 4, BSC -> 97\r\n        const networkId = await web3.eth.net.getId()\r\n        console.log('networkid:', networkId)\r\n        const networkData = smart_contract.networks[networkId]\r\n        console.log('NetworkData:', networkData)\r\n\r\n        if (networkData) {\r\n            const abi = smart_contract.abi\r\n            console.log('abi', abi)\r\n            const address = networkData.address\r\n            console.log('address:', address)\r\n            const contract = new web3.eth.Contract(abi, address)\r\n            this.setState({ contract })\r\n        } else {\r\n            window.alert('¡El Smart Contract no se ha desplegado en la red!')\r\n        }\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            account: '0x0',\r\n            loading: true,\r\n            contract: null,\r\n            errorMessage: \"\"\r\n        }\r\n    }\r\n\r\n    _compraBoletos = async (_numBoletos) => {\r\n        try {\r\n            console.log(\"Compra de boletos de loteria en ejecucion...\")\r\n            await this.state.contract.methods.compraBoleto(_numBoletos).send({\r\n                from: this.state.account\r\n            })\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Compra de boletos completada, ¡mucha suerte!',\r\n                width: 800,\r\n                padding: '3em',\r\n                text: `Has comprado ${_numBoletos} boletos`,\r\n                backdrop: `\r\n              rgba(15, 238, 168, 0.2)\r\n              left top\r\n              no-repeat\r\n            `\r\n            })\r\n        } catch (err) {\r\n            this.setState({ errorMessage: err })\r\n        } finally {\r\n            this.setState({ loading: false })\r\n        }\r\n    }\r\n\r\n    _precioBoleto = async () => {\r\n        try {\r\n            console.log(\"Precio del boleto en ejecucion...\")\r\n            const _precio = await this.state.contract.methods.precioBoleto().call()\r\n            Swal.fire({\r\n                icon: 'info',\r\n                title: `El precio del boleto es de ${_precio} tokens (ERC-20)`,\r\n                width: 800,\r\n                padding: '3em',\r\n                backdrop: `\r\n              rgba(15, 238, 168, 0.2)\r\n              left top\r\n              no-repeat\r\n            `\r\n            })\r\n        } catch (err) {\r\n            this.setState({ errorMessage: err })\r\n        } finally {\r\n            this.setState({ loading: false })\r\n        }\r\n    }\r\n\r\n    _tusBoletos = async () => {\r\n        try {\r\n            console.log(\"Visualizacion de tus boletos en ejecucion...\")\r\n            const _boletos = await this.state.contract.methods.tusBoletos(\r\n                this.state.account\r\n            ).call()\r\n            Swal.fire({\r\n                icon: 'info',\r\n                title: `Tus boletos son:`,\r\n                width: 800,\r\n                text: `${_boletos}`,\r\n                padding: '3em',\r\n                backdrop: `\r\n              rgba(15, 238, 168, 0.2)\r\n              left top\r\n              no-repeat\r\n            `\r\n            })\r\n\r\n        } catch (err) {\r\n            this.setState({ errorMessage: err })\r\n        } finally {\r\n            this.setState({ loading: false })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navigation account={this.state.account} />\r\n                <div className=\"container-fluid mt-5\">\r\n                    <div className=\"row\">\r\n                        <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\r\n                            <div className=\"content mr-auto ml-auto\">\r\n                                <h1> Gestión de la Lotería con ERC-20 y ERC-721 </h1>\r\n                                <h3> Compra de boletos </h3>\r\n                                <form onSubmit={(event) => {\r\n                                    event.preventDefault()\r\n                                    const cantidad = this._numBoletos.value\r\n                                    this._compraBoletos(cantidad)\r\n                                }} >\r\n                                    <input type=\"number\"\r\n                                        className=\"form-control mb-1\"\r\n                                        placeholder=\"Cantidad de boletos a comprar\"\r\n                                        ref={(input) => this._numBoletos = input} />\r\n\r\n                                    <input type=\"submit\"\r\n                                        className=\"bbtn btn-block btn-primary btn-sm\"\r\n                                        value=\"COMPRAR BOLETOS\" />\r\n                                </form>\r\n                                &nbsp;\r\n                                <Container>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <h3> Precio Boleto </h3>\r\n                                            <form onSubmit={(event) => {\r\n                                                event.preventDefault()\r\n                                                this._precioBoleto()\r\n                                            }}>\r\n                                                <input type=\"submit\"\r\n                                                    className=\"bbtn btn-block btn-danger btn-sm\"\r\n                                                    value=\"PRECIO BOLETO\" />\r\n                                            </form>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <h3> Tus Boletos </h3>\r\n                                            <form onSubmit={(event) => {\r\n                                                event.preventDefault()\r\n                                                this._tusBoletos()\r\n                                            }}>\r\n                                                <input type=\"submit\"\r\n                                                    className=\"bbtn btn-block btn-success btn-sm\"\r\n                                                    value=\"TUS BOLETOS\" />\r\n                                            </form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                            </div>\r\n                        </main>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loteria;","import React, { Component } from 'react';\r\nimport smart_contract from '../abis/loteria.json';\r\nimport Web3 from 'web3';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport Navigation from './Navbar';\r\n\r\nclass Ganador extends Component {\r\n\r\n  async componentDidMount() {\r\n    // 1. Carga de Web3\r\n    await this.loadWeb3()\r\n    // 2. Carga de datos de la Blockchain\r\n    await this.loadBlockchainData()\r\n  }\r\n\r\n  // 1. Carga de Web3\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n      console.log('Accounts: ', accounts)\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      window.alert('¡Deberías considerar usar Metamask!')\r\n    }\r\n  }\r\n\r\n  // 2. Carga de datos de la Blockchain\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3\r\n    const accounts = await web3.eth.getAccounts()\r\n    this.setState({ account: accounts[0] })\r\n    // Ganache -> 5777, Rinkeby -> 4, BSC -> 97\r\n    const networkId = await web3.eth.net.getId()\r\n    console.log('networkid:', networkId)\r\n    const networkData = smart_contract.networks[networkId]\r\n    console.log('NetworkData:', networkData)\r\n\r\n    if (networkData) {\r\n      const abi = smart_contract.abi\r\n      console.log('abi', abi)\r\n      const address = networkData.address\r\n      console.log('address:', address)\r\n      const contract = new web3.eth.Contract(abi, address)\r\n      this.setState({ contract })\r\n    } else {\r\n      window.alert('¡El Smart Contract no se ha desplegado en la red!')\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: '0x0',\r\n      loading: true,\r\n      contract: null,\r\n      errorMessage: \"\"\r\n    }\r\n  }\r\n\r\n  _generarGanador = async () => {\r\n    try {\r\n      console.log(\"Generacion del ganador en ejecucion...\")\r\n      await this.state.contract.methods.generarGanador().send({\r\n        from: this.state.account\r\n      })\r\n      Swal.fire({\r\n        icon: 'success',\r\n        title: '¡Ganador generado correctamente!',\r\n        width: 800,\r\n        padding: '3em',\r\n        backdrop: `\r\n          rgba(15, 238, 168, 0.2)\r\n          left top\r\n          no-repeat\r\n        `\r\n      })\r\n    } catch (err) {\r\n      this.setState({ errorMessage: err })\r\n    } finally {\r\n      this.setState({ loading: false })\r\n    }\r\n  }\r\n\r\n  _ganador = async () => {\r\n    try {\r\n      console.log(\"Visualizacion del ganador en ejecucion...\")\r\n      const winner = await this.state.contract.methods.ganador().call()\r\n      Swal.fire({\r\n        icon: 'info',\r\n        title: 'El ganador de la Lotería es:',\r\n        text: `${winner}`,\r\n        width: 800,\r\n        padding: '3em',\r\n        backdrop: `\r\n          rgba(15, 238, 168, 0.2)\r\n          left top\r\n          no-repeat\r\n        `\r\n      })\r\n    } catch (err) {\r\n      this.setState({ errorMessage: err })\r\n    } finally {\r\n      this.setState({ loading: false })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navigation account={this.state.account} />\r\n        <div className=\"container-fluid mt-5\">\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\r\n              <div className=\"content mr-auto ml-auto\">\r\n                <h1> Generación de un ganador en la Lotería</h1>\r\n                <form onSubmit={(event) => {\r\n                  event.preventDefault()\r\n                  this._generarGanador()\r\n                }}>\r\n                  <input type=\"submit\"\r\n                    className=\"bbtn btn-block btn-info btn-sm\"\r\n                    value=\"GENERAR GANADOR\" />\r\n                </form>\r\n                &nbsp;\r\n                <form onSubmit={(event) => {\r\n                  event.preventDefault()\r\n                  this._ganador()\r\n                }}>\r\n                  <input type=\"submit\"\r\n                    className=\"bbtn btn-block btn-success btn-sm\"\r\n                    value=\"VISUALIZAR GANADOR\" />\r\n                </form>\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ganador;","import React from 'react';\n\nconst MyFooter = () => (\n    <footer\n        style={{backgroundColor: 'rgba(0, 0, 0, 0.05)'}}\n        className=\"text-center text-lg-start text-muted\"\n    >\n        <div className=\"text-center p-4 bg-dark text-white\">\n            © 2022 Copyright: \n            <a\n                className=\"text-reset fw-bold text-white\"\n                href=\"https://github.com/gab0071\"\n            > CatellaTech\n            </a>\n        </div>\n    </footer>\n);\n\nexport default MyFooter;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\nimport Tokens from './Tokens';\nimport Loteria from './Loteria';\nimport Ganador from './Ganador';\nimport Footer from './Footer';\n\nclass App extends Component {\n    \n    render() {\n        return (\n            <BrowserRouter>\n                <div className=\"App\">\n                    <div>\n                        <Routes>\n                            <Route path=\"/\" element={<Tokens />} />\n                            <Route path=\"/loteria\" element={<Loteria />} />\n                            <Route path=\"/ganador\" element={<Ganador />} />\n                        </Routes>\n                    </div>\n                    &nbsp; &nbsp;\n                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                                &nbsp; &nbsp;\n                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                                &nbsp; &nbsp;\n                    <Footer />\n                </div>\n            </BrowserRouter>\n        );\n    }\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from 'react-dom/client';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}